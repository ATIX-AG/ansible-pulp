[tox]
envlist = py{27,37}, py36-{default,upgrade}
# This repo isn't a Python project, so it makes no sense to install an sdist
# into the virtualenvs tox creates.
skipsdist = true

[testenv]
sitepackages = true
deps =
    ansible
    docker
    molecule
passenv = TRAVIS_WAIT
whitelist_externals =
    travis-wait-enhanced
# For reference on the commands, see:
# `molecule matrix test`
# We removed cleanup from the middle it breaks later tasks.
# We removed cleanup from the end because it complicate Travis
# debugging.
commands =
    molecule lint -s default
    molecule converge -s default # calls: dependency, create and prepare
    molecule syntax -s default
    {env:TRAVIS_WAIT:} molecule idempotence -s default
    molecule side-effect -s default
    molecule verify -s default
    molecule destroy -s default
    molecule lint -s source
    molecule converge -s source # calls: dependency, create and prepare
    molecule syntax -s source
    {env:TRAVIS_WAIT:} molecule idempotence -s source
    molecule side-effect -s source
    molecule verify -s source
    molecule destroy -s source
    molecule lint -s dynamic
    molecule converge -s dynamic # calls: dependency, create and prepare
    molecule syntax -s dynamic
    {env:TRAVIS_WAIT:} molecule idempotence -s dynamic
    molecule side-effect -s dynamic
    molecule verify -s dynamic
    # only the last scenario should lack a "destroy" task. (It wastes time, and makes debugging more difficult.)

[testenv:py36-upgrade]
sitepackages = {[testenv]sitepackages}
deps = {[testenv]deps}
passenv = {[testenv]passenv}
whitelist_externals = {[testenv]whitelist_externals}
commands =
    # We run the upgrade tests 1st because assuming a fast internet connection,
    # (to download the pre_built image of pulp 3.0.0), they take less long.
    molecule lint -s default-upgrade
    molecule converge -s default-upgrade # calls: dependency, create and prepare
    molecule syntax -s default-upgrade
    # There is no output while the idempotence test runs, so prevent Travis
    # from failing when the idempotence test takes longer than Travis's normal
    # 10 minute wait for output.
    # NOTE: --debug would only provide output for seconds at the beginning
    # and end.
    {env:TRAVIS_WAIT:} molecule idempotence -s default-upgrade
    molecule side-effect -s default-upgrade
    molecule verify -s default-upgrade
    molecule destroy -s default-upgrade
    molecule lint -s source-upgrade
    molecule converge -s source-upgrade # calls: dependency, create and prepare
    molecule syntax -s source-upgrade
    # pip installing from source always replaces the installed version, thus
    # the task is always reports changed. During upgrades, we need the handlers
    # to run on the pip install tasks, so we can't alter said tasks to never
    # report changed. So let's just not run idempotency on this scenario.
    # {env:TRAVIS_WAIT:} molecule idempotence -s source-upgrade
    molecule side-effect -s source-upgrade
    molecule verify -s source-upgrade
    # only the last scenario should lack a "destroy" task. (It wastes time, and makes debugging more difficult.)
