---

- name: Create directory to contain the SQLite3 database
  file:
    name: '{{ "/".join(pulp_config_database["default"]["NAME"].split("/")[:-1]) }}'
    owner: '{{ pulp_user }}'
    group: '{{ pulp_user }}'
    state: directory
    mode: 0750
  when: pulp_config_database['default']['ENGINE'] == 'django.db.backends.sqlite3'
  become: true

- block:

  - name: Install psycopg package
    package:
      name: '{{ pulp_psycopg_package }}'
      state: installed
    become: true

  # The database is remote
  - block:

    - name: Add Pulp database user
      postgresql_user:
        name: "{{ pulp_config_database['default']['USER'] }}"
        password: "{{ pulp_config_database['default']['PASSWORD'] }}"
        role_attr_flags: SUPERUSER,LOGIN
        login_host: "{{ pulp_config_database['default']['HOST'] | default('localhost') }}"
        login_user: '{{ pulp_postgres_login_user }}'
        login_password: '{{ pulp_postgres_login_password }}'
        port: '{{ pulp_postgres_port }}'

    - name: Add Pulp database
      postgresql_db:
        name: "{{ pulp_config_database['default']['NAME'] }}"
        owner: "{{ pulp_config_database['default']['USER'] }}"
        login_host: "{{ pulp_config_database['default']['HOST'] | default('localhost') }}"
        login_user: '{{ pulp_postgres_login_user }}'
        login_password: '{{ pulp_postgres_login_password }}'
        port: '{{ pulp_postgres_port }}'

    when:
    - pulp_config_database['default']['HOST'] is defined
    - pulp_config_database['default']['HOST'] != 'localhost'

  # The database is local
  - block:

    - name: Add Pulp database user
      postgresql_user:
        name: "{{ pulp_config_database['default']['USER'] }}"
        password: "{{ pulp_config_database['default']['PASSWORD'] }}"
        role_attr_flags: SUPERUSER,LOGIN

    - name: Add Pulp database
      postgresql_db:
        name: "{{ pulp_config_database['default']['NAME'] }}"
        owner: "{{ pulp_config_database['default']['USER'] }}"

    become: true
    become_user: '{{ pulp_postgres_user }}'
    when: >
      pulp_config_database['default']['HOST'] is not defined or
      (pulp_config_database['default']['HOST'] is defined and pulp_config_database['default']['HOST'] == 'localhost')

  when: >
    pulp_config_database['default']['ENGINE'] in
    ['django.db.backends.postgresql_psycopg2', 'django.db.backends.postgresql']

- name: Get the exact pulpcore install dir
  find:
    paths: '{{ pulp_install_dir }}/lib/'
    pattern: '^python.\..$'
    use_regex: true
    file_type: directory
  register: result

- name: Assert the pulpcore install dir was found
  assert:
    that: '{{ result.matched }} == 1'

- name: Make the migrations directories writable for the {{ pulp_user }} user
  file:
    name: '{{ result.files[0].path }}/site-packages/{{ item }}/app/migrations'
    state: directory
    owner: '{{ pulp_user }}'
    group: '{{ pulp_user }}'
    mode: 0700
  with_items: "{{ ['pulpcore'] | union(pulp_install_plugins) }}"
  become: true

- block:

  - name: Create database migrations for pulp_app
    command: '{{ pulp_install_dir }}/bin/pulp-manager makemigrations {{ item }}'
    with_items: "{{ ['pulp_app'] | union(pulp_install_plugins) }}"
    changed_when: False

  - name: Run database auth migrations
    command: '{{ pulp_install_dir }}/bin/pulp-manager migrate auth --no-input'
    register: result
    changed_when: "'No migrations to apply' not in result.stdout"

  - name: Run database migrations
    command: '{{ pulp_install_dir }}/bin/pulp-manager migrate --no-input'
    register: result
    changed_when: "'No migrations to apply' not in result.stdout"

  - name: Set the Pulp admin user's password
    command: '{{ pulp_install_dir }}/bin/pulp-manager reset-admin-password --password {{ pulp_default_admin_password }}'
    no_log: True
    when: pulp_default_admin_password is defined
    changed_when: False

  become: true
  become_user: '{{ pulp_user }}'
